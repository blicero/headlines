# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-10-20 10:34:18 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* Headlines [8/12]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-10-20 Mo 10:33]
   | Headline                                 | Time      |            |       |      |
   |------------------------------------------+-----------+------------+-------+------|
   | *Total time*                             | *2d 1:36* |            |       |      |
   |------------------------------------------+-----------+------------+-------+------|
   | *Headlines [7/10]*                       | *2d 1:36* |            |       |      |
   | \_  /Components [2/4]/                   |           | /1d 15:45/ |       |      |
   | \_    Common [1/1]                       |           |            |  0:08 |      |
   | \_      Down the rabbit hole for pathlib |           |            |       | 0:08 |
   | \_    Model [0/1]                        |           |            |  0:38 |      |
   | \_      Testing                          |           |            |       | 0:27 |
   | \_      Rating and Tagging [0/0]         |           |            |       | 0:10 |
   | \_    Classifier [0/0]                   |           |            |  1:09 |      |
   | \_    Database [1/3]                     |           |            |  9:37 |      |
   | \_      Rating and Tagging [1/2]         |           |            |       | 0:35 |
   | \_      Testing                          |           |            |       | 0:20 |
   | \_    Engine [0/0]                       |           |            | 11:36 |      |
   | \_    Web UI [1/1]                       |           |            | 14:44 |      |
   | \_      Rating                           |           |            |       | 0:06 |
   | \_    Main [0/0]                         |           |            |  1:53 |      |
   | \_  /Features [3/3]/                     |           | /9:05/     |       |      |
   | \_    Sanitize [3/3]                     |           |            |  4:19 |      |
   | \_    Tagging [0/0]                      |           |            |  2:49 |      |
   | \_    Rating [0/1]                       |           |            |  1:57 |      |
   | \_  /Bugs [1/1]/                         |           | /0:20/     |       |      |
   | \_    The case of the failing refresh    |           |            |  0:20 |      |
   | \_  /Journal [1/1]/                      |           | /0:26/     |       |      |
   | \_    Wrestling with poetry              |           |            |  0:26 |      |
   #+END:
** Components [3/6]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Common [1/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
**** DONE Down the rabbit hole for pathlib
     CLOSED: [2025-10-11 Sa 16:21]
     :LOGBOOK:
     CLOCK: [2025-10-11 Sa 16:13]--[2025-10-11 Sa 16:21] =>  0:08
     :END:
*** Model [0/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-14 Di 15:29]--[2025-10-14 Di 15:30] =>  0:01
    :END:
**** Testing
     :LOGBOOK:
     CLOCK: [2025-10-16 Do 16:32]--[2025-10-16 Do 16:59] =>  0:27
     :END:
**** TODO Rating and Tagging [0/0] 
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2025-10-14 Di 15:30]--[2025-10-14 Di 15:40] =>  0:10
     :END:
*** Classifier [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-16 Do 17:48]--[2025-10-16 Do 17:52] =>  0:04
    CLOCK: [2025-10-16 Do 15:27]--[2025-10-16 Do 16:32] =>  1:05
    :END:
*** Database [1/3]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-15 Mi 14:58]--[2025-10-15 Mi 15:15] =>  0:17
    CLOCK: [2025-10-11 Sa 18:23]--[2025-10-11 Sa 18:26] =>  0:03
    CLOCK: [2025-10-09 Do 15:53]--[2025-10-09 Do 16:25] =>  0:32
    CLOCK: [2025-10-08 Mi 16:05]--[2025-10-08 Mi 16:20] =>  0:15
    CLOCK: [2025-10-08 Mi 14:40]--[2025-10-08 Mi 15:30] =>  0:50
    CLOCK: [2025-10-04 Sa 14:12]--[2025-10-04 Sa 19:11] =>  4:59
    CLOCK: [2025-10-02 Do 17:52]--[2025-10-02 Do 19:38] =>  1:46
    :END:
    I'm going to use SQLite3, /again/. But I want to try SQLAlchemy this
    time. Let's see what that is like.
    (30 minutes later) No, SQLAlchemy is too complicated for my humble needs.
**** TODO Rating and Tagging [1/2]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2025-10-14 Di 15:40]--[2025-10-14 Di 16:15] =>  0:35
     :END:
***** TODO Tagging [0/0]
      :PROPERTIES:
      :COOKIE_DATA: todo recursive
      :VISIBILITY: children
      :END:
      :LOGBOOK:
      CLOCK: [2025-10-20 Mo 09:26]
      :END:
***** DONE Rating [0/0]
      CLOSED: [2025-10-20 Mo 09:26]
**** Testing
     :LOGBOOK:
     CLOCK: [2025-10-20 Mo 10:13]--[2025-10-20 Mo 10:33] =>  0:20
     :END:
*** Engine [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-11 Sa 18:26]--[2025-10-11 Sa 18:49] =>  0:23
    CLOCK: [2025-10-11 Sa 18:10]--[2025-10-11 Sa 18:23] =>  0:13
    CLOCK: [2025-10-11 Sa 15:20]--[2025-10-11 Sa 16:06] =>  0:46
    CLOCK: [2025-10-10 Fr 14:18]--[2025-10-10 Fr 17:50] =>  3:32
    CLOCK: [2025-10-09 Do 16:26]--[2025-10-09 Do 23:08] =>  6:42
    :END:
    Engine is - for lack of a better name - the part that regularly checks
    which Feeds are due for a refresh, fetches those Feeds and processes the
    Items.
    For some really perverse reason, I would like to try Python's asyncio.
    ...
    Strike that, I think I'll go with Twisted. I have used it before, albeit a
    /looooong/ time ago, it works in a similar manner, and it probably uses
    asyncio under the hood these days anyway.
    (The Internet says Twisted does not use asyncio, but still.)
    So Twisted it is!
*** Web UI [1/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-16 Do 17:52]--[2025-10-16 Do 19:20] =>  1:28
    CLOCK: [2025-10-15 Mi 16:00]--[2025-10-15 Mi 18:57] =>  2:57
    CLOCK: [2025-10-15 Mi 15:15]--[2025-10-15 Mi 15:22] =>  0:07
    CLOCK: [2025-10-14 Di 15:15]--[2025-10-14 Di 15:28] =>  0:13
    CLOCK: [2025-10-13 Mo 17:47]--[2025-10-13 Mo 23:41] =>  5:54
    CLOCK: [2025-10-11 Sa 19:31]--[2025-10-11 Sa 23:30] =>  3:59
    :END:
**** DONE Rating
     CLOSED: [2025-10-18 Sa 15:43]
     :LOGBOOK:
     CLOCK: [2025-10-18 Sa 15:38]--[2025-10-18 Sa 15:43] =>  0:05
     CLOCK: [2025-10-16 Do 17:47]--[2025-10-16 Do 17:48] =>  0:01
     :END:
*** Main [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-11 Sa 16:22]--[2025-10-11 Sa 18:10] =>  1:48
    CLOCK: [2025-10-11 Sa 16:07]--[2025-10-11 Sa 16:12] =>  0:05
    :END:
** Features [3/4]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Sanitize [3/3]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-18 Sa 14:12]--[2025-10-18 Sa 15:28] =>  1:16
    CLOCK: [2025-10-17 Fr 15:03]--[2025-10-17 Fr 18:06] =>  3:03
    :END:
    I would like to scrub Javascript from the Item bodies. And change any
    links to open in a new window or tab. Can BeautifulSoup help me with that?
    I could do this in the frontend to, but I would like to do that before the
    browser even sees the offending HTML code.
    ...
    [2025-10-17 Fr 15:11] I /think/ I have an idea how to do that with
    BeautifulSoup. I should probably do that when fetching RSS feeds, before
    adding the Items to the database.
    ...
    Then again, I should keep the original content around; as I refine and
    change how I sanitize the HTML I may want to have older Items still
    benefit from updated scrubbing. ??? But I should at least cache the
    processed content.
**** Storage?
     Should I store the sanitized content in the database?
**** DONE Make links open in _blank
     CLOSED: [2025-10-18 Sa 15:16]
**** DONE Resize images
     CLOSED: [2025-10-18 Sa 15:28]
     I'll keep doing that in the frontend, because I want to scale images
     while preserving their aspect ratio. When rendering the template, we
     don't know yet what the image's size will be.
**** DONE Remove Javascript and such
     CLOSED: [2025-10-18 Sa 15:17]
*** Tagging [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-18 Sa 15:46]--[2025-10-18 Sa 18:35] =>  2:49
    :END:
*** Rating [0/1]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-14 Di 16:16]--[2025-10-14 Di 18:13] =>  1:57
    :END:
**** TODO Tokenizer
     I should create a custom tokenizer that does stemming.
*** Full-text search [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
** Bugs [1/1]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** DONE The case of the failing refresh
    CLOSED: [2025-10-20 Mo 09:23]
    :LOGBOOK:
    CLOCK: [2025-10-15 Mi 15:35]--[2025-10-15 Mi 15:55] =>  0:20
    :END:
** Journal [1/1]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** [2025-10-11 Sa 19:06]
    The engine appears to work rather fine (judging from a very brief and
    superficial test 🙄), so I think now it's on to the web UI
*** CANCELLED Wrestling with poetry
    CLOSED: [2025-10-08 Mi 16:01]
    :LOGBOOK:
    CLOCK: [2025-10-08 Mi 15:35]--[2025-10-08 Mi 16:01] =>  0:26
    :END:
    I attempted to use poetry, but I find it is too complicated for my taste,
    and the payoff is too small for my needs to warrant its further use. 

