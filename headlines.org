# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-10-10 20:26:14 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: database(d) design(e), meditation(m)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* Headlines [0/0]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-10-10 Fr 20:26]
   | Headline                    | Time    |         |       |
   |-----------------------------+---------+---------+-------|
   | *Total time*                | *19:02* |         |       |
   |-----------------------------+---------+---------+-------|
   | *Headlines [0/0]*           | *19:02* |         |       |
   | \_  /Components [0/0]/      |         | /18:36/ |       |
   | \_    Database [0/0]        |         |         |  8:22 |
   | \_    Engine [0/0]          |         |         | 10:14 |
   | \_  /Journal [1/1]/         |         | /0:26/  |       |
   | \_    Wrestling with poetry |         |         |  0:26 |
   #+END:
** Components [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Model [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
*** Database [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-09 Do 15:53]--[2025-10-09 Do 16:25] =>  0:32
    CLOCK: [2025-10-08 Mi 16:05]--[2025-10-08 Mi 16:20] =>  0:15
    CLOCK: [2025-10-08 Mi 14:40]--[2025-10-08 Mi 15:30] =>  0:50
    CLOCK: [2025-10-04 Sa 14:12]--[2025-10-04 Sa 19:11] =>  4:59
    CLOCK: [2025-10-02 Do 17:52]--[2025-10-02 Do 19:38] =>  1:46
    :END:
    I'm going to use SQLite3, /again/. But I want to try SQLAlchemy this
    time. Let's see what that is like.
    (30 minutes later) No, SQLAlchemy is too complicated for my humble needs.
*** Web UI [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
*** Engine [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-10-10 Fr 14:18]--[2025-10-10 Fr 17:50] =>  3:32
    CLOCK: [2025-10-09 Do 16:26]--[2025-10-09 Do 23:08] =>  6:42
    :END:
    Engine is - for lack of a better name - the part that regularly checks
    which Feeds are due for a refresh, fetches those Feeds and processes the
    Items.
    For some really perverse reason, I would like to try Python's asyncio.
    ...
    Strike that, I think I'll go with Twisted. I have used it before, albeit a
    /looooong/ time ago, it works in a similar manner, and it probably uses
    asyncio under the hood these days anyway.
    (The Internet says Twisted does not use asyncio, but still.)
    So Twisted it is!
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Bugs [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Journal [1/1]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** CANCELLED Wrestling with poetry
    CLOSED: [2025-10-08 Mi 16:01]
    :LOGBOOK:
    CLOCK: [2025-10-08 Mi 15:35]--[2025-10-08 Mi 16:01] =>  0:26
    :END:
    I attempted to use poetry, but I find it is too complicated for my taste,
    and the payoff is too small for my needs to warrant its further use. 

